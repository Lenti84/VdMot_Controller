# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-pipelines

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |  
    python -m pip install --upgrade pip
    pip install platformio
    export PATH=$PATH:~/.local/bin
    platformio run -d ./software_esp32/
  displayName: Install and run platformio

- script: |  
    mkdir package
    cp ./software_esp32/.pio/build/esp32dev/firmware.bin package
    cp -r data package
    cd package
    zip -r ../$(Build.BuildNumber).zip .
  displayName: Rename output
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/software_esp32/.pio/build/esp32dev/'
    Contents: 'firmware.bin'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: 'Firmware $(Build.BuildNumber)'
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    publishLocation: Container
    TargetPath: .